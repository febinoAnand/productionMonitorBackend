# Generated by Django 4.2.4 on 2024-10-11 21:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('devices', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Button',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buttonID', models.CharField(max_length=15, unique=True)),
                ('buttonName', models.CharField(max_length=20)),
                ('buttonColorName', models.CharField(max_length=20)),
                ('buttonColor', models.CharField(max_length=7)),
                ('buttonDO', models.IntegerField(default=0, validators=[events.models.unique_default])),
                ('buttonMode', models.CharField(choices=[('AUTO', 'auto'), ('MANUAL', 'manual'), ('AUTO+MANUAL', 'auto+manual')], default='auto', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventID', models.CharField(max_length=15, unique=True)),
                ('acknowledgeUser', models.ManyToManyField(blank=True, related_name='ackuser', to=settings.AUTH_USER_MODEL)),
                ('button', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='events.button')),
            ],
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicatorID', models.CharField(max_length=15, unique=True)),
                ('indicatorpin', models.IntegerField(unique=True)),
                ('indicatorColor', models.CharField(max_length=7)),
                ('indicatorColorName', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problemCode', models.CharField(max_length=20, unique=True)),
                ('problemName', models.CharField(max_length=30)),
                ('problemDescription', models.TextField(max_length=100)),
                ('problemType', models.CharField(blank=True, choices=[('ISSUE', 'issue'), ('ACKNOWLEDGE', 'acknowledge'), ('FINE', 'fine')], max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='EventGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('groupID', models.CharField(max_length=15, unique=True)),
                ('groupName', models.CharField(max_length=50, null=True)),
                ('events', models.ManyToManyField(related_name='eventGroup', to='events.event')),
                ('machines', models.ManyToManyField(related_name='machinesList', to='devices.machinedetails')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='indicator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='events.indicator'),
        ),
        migrations.AddField(
            model_name='event',
            name='notifyUser',
            field=models.ManyToManyField(blank=True, related_name='notiuser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='event',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problems', to='events.problemcode'),
        ),
    ]
