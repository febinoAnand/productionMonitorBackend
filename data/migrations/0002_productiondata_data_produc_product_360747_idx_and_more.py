# Generated by Django 4.2.4 on 2024-10-22 04:32

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            """
            -- Create the partitioned table
            CREATE TABLE productiondata (
                id SERIAL,
                date DATE NOT NULL,
                time TIME NOT NULL,
                shift_number INTEGER NOT NULL,
                shift_name VARCHAR(45),
                target_production INTEGER NOT NULL,
                machine_id VARCHAR(45) NOT NULL,
                machine_name VARCHAR(45) NOT NULL,
                production_count INTEGER NOT NULL,
                production_date DATE NOT NULL,
                log_data_id INTEGER NOT NULL,
                timestamp VARCHAR(50),
                PRIMARY KEY (id, production_date)  -- Include production_date in the primary key
            ) PARTITION BY RANGE (production_date);

            -- Create a default partition for rows that do not match other partitions
            CREATE TABLE productiondata_default PARTITION OF productiondata
                DEFAULT;
            """
        ),
        migrations.RunSQL(
            """
            -- Create the function to automatically create daily partitions
            CREATE OR REPLACE FUNCTION create_daily_partition() RETURNS TRIGGER AS $$ 
            DECLARE
                partition_date TEXT;
                partition_name TEXT;
            BEGIN
                partition_date := to_char(NEW.production_date, 'YYYY_MM_DD');
                partition_name := 'productiondata_' || partition_date;

                -- Check if the partition already exists
                IF NOT EXISTS (
                    SELECT 1 FROM information_schema.tables 
                    WHERE table_name = partition_name
                ) THEN
                    EXECUTE format('CREATE TABLE %I PARTITION OF productiondata 
                        FOR VALUES FROM (''%s'') TO (''%s'')',
                        partition_name, 
                        NEW.production_date, 
                        NEW.production_date + INTERVAL '1 day'
                    );
                END IF;

                RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;

            -- Create a trigger to call the function before inserting a new row
            CREATE TRIGGER create_partition_trigger
            BEFORE INSERT ON productiondata
            FOR EACH ROW
            EXECUTE FUNCTION create_daily_partition();
            """
        )
    ]