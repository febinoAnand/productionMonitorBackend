version: '3.8'

services:
    postgres:
        image: postgres:16
        container_name: postgres_db
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: dbpostgres
            
        ports:
            - 5432:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data

    redis:
        image: redis:7.0.11-alpine
        container_name: redis_db
        command: redis-server --requirepass hlmando_9182837465
        ports:
            - 6379:6379
        
    django:
        container_name: univaProductionBackend
        build:
            context: ./
        # command: python manage.py runserver 0.0.0.0:8000 --noreload
        entrypoint: /usr/src/app/entrypoint.sh
        volumes:
            - ./:/usr/src/app/
        ports:
            - 9020:8000
        environment:
            - DEBUG=1
            - SECRET_KEY="django-insecure-gstje5mbc3qm)j+@o@l)=kw6w3xo_2(ryf3q+q)^^ih@k)2&be"
            - ALLOWED_HOST=localhost, 127.0.0.1
            - DATABASE_URL=postgres://admin:admin@postgres_db:5432/dbpostgres
            - ENV=${ENV}
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432

        depends_on:
            - redis
            - postgres

    celery:
        container_name: celeryProductionWorker
        build:
            context: ./
        # command: celery -A univaProductionMonitor worker -l INFO
        entrypoint: /usr/src/app/worker-entrypoint.sh
        volumes:
            - ./:/usr/src/app/
        environment:
            # - C_FORCE_ROOT=true
            - DEBUG=1
            - SECRET_KEY='django-insecure-gstje5mbc3qm)j+@o@l)=kw6w3xo_2(ryf3q+q)^^ih@k)2&be'
            - ALLOWED_HOST=localhost, 127.0.0.1
            - DATABASE_URL=postgres://admin:admin@postgres_db:5432/dbpostgres
            - ENV=${ENV}
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            # - CELERY_TIMEZONE= "Asia/kolkata"
            # - CELERY_TASK_TRACK_STARTED= True
            # - CELERY_TASK_TIME_LIMIT= 30 * 60
            # - CELERY_BROKER_URL= "redis://localhost:6379"
            # - CELERY_BACKEND= "redis://localhost:6379"
        depends_on:
            - django

    mqtt-client:
        container_name: mqttClient
        build:
            context: ./
        # command: celery -A univaProductionMonitor worker -l INFO
        entrypoint: /usr/src/app/mqtt-entrypoint.sh
        volumes:
            - ./:/usr/src/app/
        environment:
            # - C_FORCE_ROOT=true
            - DEBUG=1
            - SECRET_KEY='django-insecure-gstje5mbc3qm)j+@o@l)=kw6w3xo_2(ryf3q+q)^^ih@k)2&be'
            - ALLOWED_HOST=localhost, 127.0.0.1
            - DATABASE_URL=postgres://admin:admin@postgres_db:5432/dbpostgres
            - ENV=${ENV}
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
            # - CELERY_TIMEZONE= "Asia/kolkata"
            # - CELERY_TASK_TRACK_STARTED= True
            # - CELERY_TASK_TIME_LIMIT= 30 * 60
            # - CELERY_BROKER_URL= "redis://localhost:6379"
            # - CELERY_BACKEND= "redis://localhost:6379"

        deploy:
            restart_policy:
                condition: on-failure
                delay: 10s
                max_attempts: 3
                window: 120s
        depends_on:
            - celery

    
volumes:
    postgres_data: