# Generated by Django 4.2.4 on 2024-10-14 10:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_name', models.CharField(max_length=45)),
                ('device_token', models.CharField(max_length=100, unique=True)),
                ('hardware_version', models.CharField(blank=True, max_length=10, null=True)),
                ('software_version', models.CharField(blank=True, max_length=10, null=True)),
                ('create_date_time', models.DateTimeField(auto_now_add=True)),
                ('update_date_time', models.DateTimeField(auto_now=True)),
                ('protocol', models.CharField(choices=[('mqtt', 'MQTT'), ('http', 'HTTP')], max_length=10)),
                ('pub_topic', models.CharField(blank=True, max_length=100, null=True)),
                ('sub_topic', models.CharField(blank=True, max_length=100, null=True)),
                ('api_path', models.CharField(blank=True, max_length=100, null=True)),
                ('device_status', models.IntegerField(blank=True, default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MachineDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_name', models.CharField(default='none', max_length=45)),
                ('machine_id', models.CharField(max_length=15, unique=True)),
                ('line', models.CharField(blank=True, max_length=30, null=True)),
                ('manufacture', models.CharField(blank=True, max_length=45, null=True)),
                ('year', models.CharField(blank=True, max_length=30, null=True)),
                ('production_per_hour', models.IntegerField(default=0)),
                ('create_date_time', models.DateTimeField(auto_now_add=True)),
                ('update_date_time', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(default=1)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='devices.devicedetails')),
            ],
        ),
        migrations.CreateModel(
            name='ShiftTiming',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('shift_number', models.IntegerField(default=1)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('start_hours', models.TimeField(blank=True, null=True)),
                ('shift_name', models.CharField(blank=True, max_length=45, null=True)),
                ('create_date_time', models.DateTimeField(auto_now_add=True)),
                ('update_date_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShiftTimings',
            fields=[
                ('_id', models.AutoField(default=1, primary_key=True, serialize=False)),
                ('shift_number', models.IntegerField(default=1)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('shift_name', models.CharField(blank=True, max_length=45, null=True)),
                ('create_date_time', models.DateTimeField(auto_now_add=True)),
                ('update_date_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnRegisteredDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sessionID', models.UUIDField()),
                ('deviceID', models.CharField(default=uuid.uuid1, max_length=15, unique=True)),
                ('model', models.CharField(blank=True, max_length=10, null=True)),
                ('hardwareVersion', models.CharField(blank=True, max_length=10, null=True)),
                ('softwareVersion', models.CharField(blank=True, max_length=10, null=True)),
                ('devicePassword', models.CharField(max_length=20)),
                ('OTP', models.IntegerField(blank=True, null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=30)),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('deviceID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='deviceToken', to='devices.devicedetails')),
            ],
        ),
        migrations.CreateModel(
            name='RFID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfid', models.CharField(default=uuid.uuid1, max_length=50, unique=True)),
                ('rfidUser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MachineGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=45, unique=True)),
                ('machine_list', models.ManyToManyField(to='devices.machinedetails')),
            ],
        ),
    ]
